@page "/{SessionId}"
@inject IJSRuntime jsRuntime;
@inject CodeShare.Services.SessionsManager.ISessionsManager SessionsMgr;

@using Session = CodeShare.Model.Entities.Session;

<div class="sidebar">
    <MatList Style="padding: 0px">
        <MatListGroup>
            <MatListGroupSubHeader Style="color: white; font-weight: bold; margin:18px">
                Collaborators
            </MatListGroupSubHeader>
            <MatListDivider Style="border-color: white"></MatListDivider>
            <div style="max-height: 80vh; overflow: auto">
                @foreach (var collaborator in CurrentSession.Collaborators)
                {
                    <MatListItem  Style="color: white;">@collaborator.Name</MatListItem>
                }
            </div>
        </MatListGroup>
    </MatList>
</div>
<div style="margin:1.5rem">
    <h1>@CurrentSession.CurrentTask.Name</h1>
    @CurrentSession.CurrentTask.Description
    <Ace></Ace>
</div>


@code {

    [Parameter]
    public string SessionId { get; set; }

    [Parameter]
    public Session CurrentSession { get; set; }

    protected override void OnInitialized()
    {
        CurrentSession = SessionsMgr.GetSessionById(SessionId);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //{
        //    await jsRuntime.InvokeVoidAsync("startSignalR", ProjectId);
        //    var project = CollabMgr.GetProjectById(ProjectId);
        //    ProjectName = project.Name;
        //    ProjectDesciption = project.Description;
        //    StateHasChanged();
        //}
    }

    //async Task UpdateCollabListAsync(object sender, ConnToProjectEventArgs e)
    //{
    //    await InvokeAsync(() =>
    //    {
    //        Collaborators = CollabMgr.GetProjectCollaborators(ProjectId);
    //        StateHasChanged();
    //    });
    //}
}